version: "3.8"

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:


    build:
      context: ./app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      - db

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"


  ml_worker:
    build:
      context: ./rabbitmq 
      dockerfile: rabbitmq.Dockerfile  
    depends_on:
      - rabbitmq
      - db
      - backend
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=rmuser
      - RABBITMQ_PASSWORD=rmpassword
    restart: always
    
  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=--rabbit disk_free_limit 2147483648
    ports:
      - 15675:15672
      - 5675:5672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    



volumes:
  pgdata:
  rabbitmq: